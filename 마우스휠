<script src="https://unpkg.com/wheel-smooth"></script> 
<script src="https://unpkg.com/smooth-scroll@16.1.3/dist/smooth-scroll.polyfills.min.js"></script>

1. <script src="https://unpkg.com/wheel-smooth"></script>
📌 라이브러리 이름: wheel-smooth
✅ 기능 요약:

마우스 휠 스크롤을 부드럽게 만들어주는 라이브러리입니다.

기본 브라우저 스크롤보다 더 부드럽고 자연스러운 스크롤 효과를 제공합니다.

🛠️ 사용 가능 기능:

휠 스크롤의 가속도, 감속 조절

스크롤 속도 조절

스크롤의 easing 커스터마이징 (예: easeInOut, linear 등)

사용자가 스크롤할 때 미세한 관성 효과 적용

✨ 예시 사용법:
// 초기화 (기본값 사용)
window.wheelSmooth();

// 옵션을 커스터마이징할 수도 있음
window.wheelSmooth({
  duration: 0.5, // 스크롤 지속 시간 (초)
  easing: 'easeInOut', // 가속도 곡선
  mouseMultiplier: 1.2, // 마우스 휠 민감도
});

2. <script src="https://unpkg.com/smooth-scroll@16.1.3/dist/smooth-scroll.polyfills.min.js"></script>
📌 라이브러리 이름: smooth-scroll
✅ 기능 요약:

**앵커 링크(href="#section1" 등)**를 클릭했을 때 부드럽게 해당 섹션으로 스크롤되도록 만드는 라이브러리입니다.

🛠️ 사용 가능 기능:

앵커 링크 클릭 시 부드러운 스크롤 애니메이션

스크롤 지속 시간, 거리, easing 조절

오프셋 지정 (예: fixed 헤더 고려)

동적 컨텐츠에서도 적용 가능

콜백 함수로 스크롤 전/후 작업 실행 가능

✨ 예시 사용법:
// 초기화
var scroll = new SmoothScroll('a[href*="#"]', {
  speed: 500,           // 스크롤 속도 (ms)
  offset: 60,           // 상단에서 얼마나 떨어지게 할지 (px)
  easing: 'easeInOutCubic',  // 부드러운 가속 곡선
  updateURL: false      // URL 해시 변경 여부
});

🔄 두 라이브러리를 함께 사용할 때 주의점:

wheel-smooth는 휠 스크롤을 부드럽게 만들고,

smooth-scroll는 링크 클릭 시 스크롤 애니메이션을 부드럽게 처리합니다.

같이 사용하면 전체적인 스크롤 사용자 경험이 더 부드럽고 세련되어 보이지만,
각 라이브러리가 DOM의 스크롤을 제어하므로 일부 상황에서는 충돌 가능성도 있습니다.

⚠️ 권장: 둘 다 적용 후, 동작 테스트하여 UX에 맞게 조정하세요.
