//getter함수 =  특정값을 조회할 때 마다 함수 호출
const numbers = {
  a: 1,
  b: 2,
  get sum() {
    console.log("sum 함수가 실행됩니다.");
    return this.a + this.b;
  }
};

console.log(numbers.sum);
numbers.b=8;
console.log(numbers.sum); //특정 값을 조회하려고 할 때, 특정 코드를 실행 시키고 연산된 값을 받아서 사용하는 것



//setter함수 = 특정 값을 설정할 때 마다 , value를 파라메타로 받아와서 값을 설정하거나 추가적인 코드를 실행할 때 
const dog = {
  _name: "멍멍이",
  set name(value) {
    console.log("이름이 바뀝니다." + value);
    this._name = value;
  }
};
console.log(dog._name);
dog.name = "뭉뭉이";
console.log(dog._name); //특정 값을 바꿔줄 때, 

//setter,getter 의 함수 이름이 같을 수 있음. 같아도 실행되는데는 문제가 없음




*******************************응용예제
//getter, setter 함수 사용
const numbers = {
  _a: 1,
  _b: 2,
  sum: 3,
  calculate() {
    console.log("calculate");
    this.sum = this._a + this._b;
  },
  get a() {
    return this._a;
  },
  get b() {
    return this._b;
  },
  set a(value) {
    this._a = value; //value값을 넣어줘야 하니까
    this.calculate(); //sum값을 업데이트하려고 함수를 한번 호출
  },
  set b(value) {
    this._b = value;
    this.calculate();
  }
};

console.log(numbers.sum); //3
numbers.a = 5;
numbers.b = 7;
console.log(numbers.sum); //12

